plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kosa.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'org.mariadb:r2dbc-mariadb'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	runtimeOnly 'org.flywaydb:flyway-core' //마이그레이션을 통해 데이터베이스 버전 관리할 수 있는 기능 제공 
	runtimeOnly 'org.springframework:spring-jdbc' //JDBC API와 스프링의 통합을 제공한다. 스프링 프레임워크의 일부로 스프링 에이터 JDBC와 혼동하지 말아야 한다.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation 'org.testcontainers:r2dbc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	//플라이웨이 의존성 라이브러리 설정
	implementation 'org.flywaydb:flyway-mysql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//주문서비스에서 OkHttp의 MockWeServer에 대한 테스트 의존성 추가 
//	testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'	

 	testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.testcontainers:testcontainers' // Testcontainers 의존성	
}

tasks.named('test') {
	useJUnitPlatform()
}
